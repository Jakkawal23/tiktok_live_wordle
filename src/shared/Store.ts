// src/store/index.ts
/**
 * Store ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏° Thwordle ‡πÉ‡∏ô Vue
 * ‡∏ó‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ modalViewed, data (attempts), ‡πÅ‡∏•‡∏∞ settings
 */

import { ref, watch } from "vue";
import { CharState } from "@/shared/Wordle"; // ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ path ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

// üîπ Type Definitions
interface IStore {
  modalViewed: boolean;
  data: Record<string, Day>;
  settings?: ISettings;
}

export interface ISettings {
  layout: "‡∏Å-‡∏Æ" | "Kedmanee";
  darkMode: boolean;
  hideTrainingCode: boolean;
  [key: string]: any;
}

interface Day {
  attempts: any[];
  win?: boolean;
  lose?: boolean;
}

// üîπ Default Settings
const defaultSettings: ISettings = {
  layout: "Kedmanee",
  darkMode: false,
  hideTrainingCode: false,
};

const DEFAULT: IStore = {
  modalViewed: false,
  data: {},
  settings: defaultSettings,
};

// üîπ LocalStorage Key
const LOCALSTORAGE_KEY = "thwordle-attempts";

// üîπ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å LocalStorage ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ Default
const storage: IStore = JSON.parse(
  window.localStorage.getItem(LOCALSTORAGE_KEY) || JSON.stringify(DEFAULT)
);

// üîπ Reactive States
export const modalViewed = ref<IStore["modalViewed"]>(storage.modalViewed || DEFAULT.modalViewed);
export const data = ref<IStore["data"]>(storage.data || DEFAULT.data);
export const settings = ref<IStore["settings"]>(storage.settings || DEFAULT.settings);

// üîπ ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô LocalStorage ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ state ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
watch(modalViewed, (value) => {
  storage.modalViewed = value;
  storeSettings();
});

watch(data, (value) => {
  storage.data = value;
  storeSettings();
});

watch(settings, (value) => {
  storage.settings = value;
  storeSettings();
});

// üîπ Function ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô LocalStorage
function storeSettings() {
  window.localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(storage));
}

// üîπ Export Store
export default {
  modalViewed,
  data,
  settings,
};
